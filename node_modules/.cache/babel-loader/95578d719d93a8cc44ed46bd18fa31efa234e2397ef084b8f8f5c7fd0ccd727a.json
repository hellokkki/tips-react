{"ast":null,"code":"'use strict';\n\nconst gitHosts = require('./git-host-info.js');\nclass GitHost {\n  constructor(type, user, auth, project, committish, defaultRepresentation) {\n    let opts = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\n    Object.assign(this, gitHosts[type]);\n    this.type = type;\n    this.user = user;\n    this.auth = auth;\n    this.project = project;\n    this.committish = committish;\n    this.default = defaultRepresentation;\n    this.opts = opts;\n  }\n  hash() {\n    return this.committish ? `#${this.committish}` : '';\n  }\n  ssh(opts) {\n    return this._fill(this.sshtemplate, opts);\n  }\n  _fill(template, opts) {\n    if (typeof template === 'function') {\n      const options = {\n        ...this,\n        ...this.opts,\n        ...opts\n      };\n\n      // the path should always be set so we don't end up with 'undefined' in urls\n      if (!options.path) {\n        options.path = '';\n      }\n\n      // template functions will insert the leading slash themselves\n      if (options.path.startsWith('/')) {\n        options.path = options.path.slice(1);\n      }\n      if (options.noCommittish) {\n        options.committish = null;\n      }\n      const result = template(options);\n      return options.noGitPlus && result.startsWith('git+') ? result.slice(4) : result;\n    }\n    return null;\n  }\n  sshurl(opts) {\n    return this._fill(this.sshurltemplate, opts);\n  }\n  browse(path, fragment, opts) {\n    // not a string, treat path as opts\n    if (typeof path !== 'string') {\n      return this._fill(this.browsetemplate, path);\n    }\n    if (typeof fragment !== 'string') {\n      opts = fragment;\n      fragment = null;\n    }\n    return this._fill(this.browsefiletemplate, {\n      ...opts,\n      fragment,\n      path\n    });\n  }\n  docs(opts) {\n    return this._fill(this.docstemplate, opts);\n  }\n  bugs(opts) {\n    return this._fill(this.bugstemplate, opts);\n  }\n  https(opts) {\n    return this._fill(this.httpstemplate, opts);\n  }\n  git(opts) {\n    return this._fill(this.gittemplate, opts);\n  }\n  shortcut(opts) {\n    return this._fill(this.shortcuttemplate, opts);\n  }\n  path(opts) {\n    return this._fill(this.pathtemplate, opts);\n  }\n  tarball(opts) {\n    return this._fill(this.tarballtemplate, {\n      ...opts,\n      noCommittish: false\n    });\n  }\n  file(path, opts) {\n    return this._fill(this.filetemplate, {\n      ...opts,\n      path\n    });\n  }\n  getDefaultRepresentation() {\n    return this.default;\n  }\n  toString(opts) {\n    if (this.default && typeof this[this.default] === 'function') {\n      return this[this.default](opts);\n    }\n    return this.sshurl(opts);\n  }\n}\nmodule.exports = GitHost;","map":{"version":3,"names":["gitHosts","require","GitHost","constructor","type","user","auth","project","committish","defaultRepresentation","opts","Object","assign","default","hash","ssh","_fill","sshtemplate","template","options","path","startsWith","slice","noCommittish","result","noGitPlus","sshurl","sshurltemplate","browse","fragment","browsetemplate","browsefiletemplate","docs","docstemplate","bugs","bugstemplate","https","httpstemplate","git","gittemplate","shortcut","shortcuttemplate","pathtemplate","tarball","tarballtemplate","file","filetemplate","getDefaultRepresentation","toString","module","exports"],"sources":["/Users/viktorkondakov/Desktop/programming/projects/tips-react/node_modules/hosted-git-info/git-host.js"],"sourcesContent":["'use strict'\nconst gitHosts = require('./git-host-info.js')\n\nclass GitHost {\n  constructor (type, user, auth, project, committish, defaultRepresentation, opts = {}) {\n    Object.assign(this, gitHosts[type])\n    this.type = type\n    this.user = user\n    this.auth = auth\n    this.project = project\n    this.committish = committish\n    this.default = defaultRepresentation\n    this.opts = opts\n  }\n\n  hash () {\n    return this.committish ? `#${this.committish}` : ''\n  }\n\n  ssh (opts) {\n    return this._fill(this.sshtemplate, opts)\n  }\n\n  _fill (template, opts) {\n    if (typeof template === 'function') {\n      const options = { ...this, ...this.opts, ...opts }\n\n      // the path should always be set so we don't end up with 'undefined' in urls\n      if (!options.path) {\n        options.path = ''\n      }\n\n      // template functions will insert the leading slash themselves\n      if (options.path.startsWith('/')) {\n        options.path = options.path.slice(1)\n      }\n\n      if (options.noCommittish) {\n        options.committish = null\n      }\n\n      const result = template(options)\n      return options.noGitPlus && result.startsWith('git+') ? result.slice(4) : result\n    }\n\n    return null\n  }\n\n  sshurl (opts) {\n    return this._fill(this.sshurltemplate, opts)\n  }\n\n  browse (path, fragment, opts) {\n    // not a string, treat path as opts\n    if (typeof path !== 'string') {\n      return this._fill(this.browsetemplate, path)\n    }\n\n    if (typeof fragment !== 'string') {\n      opts = fragment\n      fragment = null\n    }\n    return this._fill(this.browsefiletemplate, { ...opts, fragment, path })\n  }\n\n  docs (opts) {\n    return this._fill(this.docstemplate, opts)\n  }\n\n  bugs (opts) {\n    return this._fill(this.bugstemplate, opts)\n  }\n\n  https (opts) {\n    return this._fill(this.httpstemplate, opts)\n  }\n\n  git (opts) {\n    return this._fill(this.gittemplate, opts)\n  }\n\n  shortcut (opts) {\n    return this._fill(this.shortcuttemplate, opts)\n  }\n\n  path (opts) {\n    return this._fill(this.pathtemplate, opts)\n  }\n\n  tarball (opts) {\n    return this._fill(this.tarballtemplate, { ...opts, noCommittish: false })\n  }\n\n  file (path, opts) {\n    return this._fill(this.filetemplate, { ...opts, path })\n  }\n\n  getDefaultRepresentation () {\n    return this.default\n  }\n\n  toString (opts) {\n    if (this.default && typeof this[this.default] === 'function') {\n      return this[this.default](opts)\n    }\n\n    return this.sshurl(opts)\n  }\n}\nmodule.exports = GitHost\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAE9C,MAAMC,OAAO,CAAC;EACZC,WAAW,CAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,UAAU,EAAEC,qBAAqB,EAAa;IAAA,IAAXC,IAAI,uEAAG,CAAC,CAAC;IAClFC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEZ,QAAQ,CAACI,IAAI,CAAC,CAAC;IACnC,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACK,OAAO,GAAGJ,qBAAqB;IACpC,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;EAEAI,IAAI,GAAI;IACN,OAAO,IAAI,CAACN,UAAU,GAAI,IAAG,IAAI,CAACA,UAAW,EAAC,GAAG,EAAE;EACrD;EAEAO,GAAG,CAAEL,IAAI,EAAE;IACT,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAACC,WAAW,EAAEP,IAAI,CAAC;EAC3C;EAEAM,KAAK,CAAEE,QAAQ,EAAER,IAAI,EAAE;IACrB,IAAI,OAAOQ,QAAQ,KAAK,UAAU,EAAE;MAClC,MAAMC,OAAO,GAAG;QAAE,GAAG,IAAI;QAAE,GAAG,IAAI,CAACT,IAAI;QAAE,GAAGA;MAAK,CAAC;;MAElD;MACA,IAAI,CAACS,OAAO,CAACC,IAAI,EAAE;QACjBD,OAAO,CAACC,IAAI,GAAG,EAAE;MACnB;;MAEA;MACA,IAAID,OAAO,CAACC,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;QAChCF,OAAO,CAACC,IAAI,GAAGD,OAAO,CAACC,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;MACtC;MAEA,IAAIH,OAAO,CAACI,YAAY,EAAE;QACxBJ,OAAO,CAACX,UAAU,GAAG,IAAI;MAC3B;MAEA,MAAMgB,MAAM,GAAGN,QAAQ,CAACC,OAAO,CAAC;MAChC,OAAOA,OAAO,CAACM,SAAS,IAAID,MAAM,CAACH,UAAU,CAAC,MAAM,CAAC,GAAGG,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,GAAGE,MAAM;IAClF;IAEA,OAAO,IAAI;EACb;EAEAE,MAAM,CAAEhB,IAAI,EAAE;IACZ,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAACW,cAAc,EAAEjB,IAAI,CAAC;EAC9C;EAEAkB,MAAM,CAAER,IAAI,EAAES,QAAQ,EAAEnB,IAAI,EAAE;IAC5B;IACA,IAAI,OAAOU,IAAI,KAAK,QAAQ,EAAE;MAC5B,OAAO,IAAI,CAACJ,KAAK,CAAC,IAAI,CAACc,cAAc,EAAEV,IAAI,CAAC;IAC9C;IAEA,IAAI,OAAOS,QAAQ,KAAK,QAAQ,EAAE;MAChCnB,IAAI,GAAGmB,QAAQ;MACfA,QAAQ,GAAG,IAAI;IACjB;IACA,OAAO,IAAI,CAACb,KAAK,CAAC,IAAI,CAACe,kBAAkB,EAAE;MAAE,GAAGrB,IAAI;MAAEmB,QAAQ;MAAET;IAAK,CAAC,CAAC;EACzE;EAEAY,IAAI,CAAEtB,IAAI,EAAE;IACV,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAACiB,YAAY,EAAEvB,IAAI,CAAC;EAC5C;EAEAwB,IAAI,CAAExB,IAAI,EAAE;IACV,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAACmB,YAAY,EAAEzB,IAAI,CAAC;EAC5C;EAEA0B,KAAK,CAAE1B,IAAI,EAAE;IACX,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAACqB,aAAa,EAAE3B,IAAI,CAAC;EAC7C;EAEA4B,GAAG,CAAE5B,IAAI,EAAE;IACT,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAACuB,WAAW,EAAE7B,IAAI,CAAC;EAC3C;EAEA8B,QAAQ,CAAE9B,IAAI,EAAE;IACd,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAACyB,gBAAgB,EAAE/B,IAAI,CAAC;EAChD;EAEAU,IAAI,CAAEV,IAAI,EAAE;IACV,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAAC0B,YAAY,EAAEhC,IAAI,CAAC;EAC5C;EAEAiC,OAAO,CAAEjC,IAAI,EAAE;IACb,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAAC4B,eAAe,EAAE;MAAE,GAAGlC,IAAI;MAAEa,YAAY,EAAE;IAAM,CAAC,CAAC;EAC3E;EAEAsB,IAAI,CAAEzB,IAAI,EAAEV,IAAI,EAAE;IAChB,OAAO,IAAI,CAACM,KAAK,CAAC,IAAI,CAAC8B,YAAY,EAAE;MAAE,GAAGpC,IAAI;MAAEU;IAAK,CAAC,CAAC;EACzD;EAEA2B,wBAAwB,GAAI;IAC1B,OAAO,IAAI,CAAClC,OAAO;EACrB;EAEAmC,QAAQ,CAAEtC,IAAI,EAAE;IACd,IAAI,IAAI,CAACG,OAAO,IAAI,OAAO,IAAI,CAAC,IAAI,CAACA,OAAO,CAAC,KAAK,UAAU,EAAE;MAC5D,OAAO,IAAI,CAAC,IAAI,CAACA,OAAO,CAAC,CAACH,IAAI,CAAC;IACjC;IAEA,OAAO,IAAI,CAACgB,MAAM,CAAChB,IAAI,CAAC;EAC1B;AACF;AACAuC,MAAM,CAACC,OAAO,GAAGhD,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}